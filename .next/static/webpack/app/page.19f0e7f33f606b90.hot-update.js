"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./data/projects.ts":
/*!**************************!*\
  !*** ./data/projects.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   projects: function() { return /* binding */ projects; }\n/* harmony export */ });\nconst projects = [\n    {\n        slug: \"lactasense\",\n        title: \"LactaSense\",\n        description: \"DECA International Finalist project. Developed a rapid lactic acid detection system using biosensor technology to monitor muscle fatigue. Combining entrepreneurship with biotech innovation to optimize athletic performance and prevent injury.\",\n        fullDescription: \"\\n      <h2>Overview</h2>\\n      <p>LactaSense is a rapid lactic acid detection system that I developed for DECA's international competition, where it became an international finalist. The project combines biosensor technology with practical applications in sports performance and injury prevention.</p>\\n      \\n      <h2>The Problem</h2>\\n      <p>Athletes often push through muscle fatigue without precise data, increasing the risk of injury and limiting optimal performance. Current monitoring methods are either invasive, delayed, or lack real-time insights.</p>\\n      \\n      <h2>The Solution</h2>\\n      <p>LactaSense uses enzymatic biosensors to measure lactic acid levels in real time, giving athletes and coaches actionable insights to optimize training and recovery. The system allows for safer, data-driven performance management.</p>\\n      \\n      <h2>Business Model</h2>\\n      <ul>\\n        <li>Direct-to-consumer wearable devices for athletes</li>\\n        <li>Partnerships with sports teams and trainers</li>\\n        <li>Subscription-based performance tracking and analytics</li>\\n        <li>Data-driven personalized training recommendations</li>\\n      </ul>\\n      \\n      <h2>DECA Competition</h2>\\n      <p>Presented LactaSense at DECA's international conference, competing against hundreds of entrepreneurship projects. Judges highlighted the innovative combination of biotechnology and practical business application.</p>\\n      \\n      <h2>What I Learned</h2>\\n      <p>This project taught me that innovation isn't just about the technologyâ€”it's about understanding user needs, building a viable business model, and clearly communicating complex ideas. It's where my passion for biotech meets real-world entrepreneurship.</p>\\n    \",\n        image: \"/images/LactaSense/Lactasense1.png\",\n        images: [\n            \"/images/LactaSense/Lactasense1.png\",\n            \"/images/LactaSense/LactaSense2.png\",\n            \"/images/LactaSense/LactaSense3.png\",\n            \"/images/LactaSense/Lactasense4.png\"\n        ],\n        date: \"2023-2024\",\n        links: {\n            paper: \"#\",\n            patent: \"/LactaSense\"\n        }\n    },\n    {\n        slug: \"bioimpedance-sensor\",\n        title: \"Impedix\",\n        description: \"Designing a non-invasive bioimpedance sensor for real-time health monitoring. Using electrical impedance to measure body composition, hydration levels, and metabolic changes.\",\n        fullDescription: \"\\n      <h2>Overview</h2>\\n      <p>Bioimpedance sensing uses small electrical currents to measure the body's impedance (resistance and reactance). Different tissues have different impedance values, allowing us to non-invasively monitor health metrics in real-time.</p>\\n      \\n      <h2>What It Measures</h2>\\n      <ul>\\n        <li>Body composition (fat vs. muscle mass)</li>\\n        <li>Hydration levels and fluid distribution</li>\\n        <li>Metabolic rate indicators</li>\\n        <li>Cardiovascular health markers</li>\\n      </ul>\\n      \\n      <h2>Technical Approach</h2>\\n      <p>The sensor uses multi-frequency bioimpedance analysis (BIA) with custom-designed electrodes. Signal processing algorithms filter noise and extract meaningful health data from the impedance measurements.</p>\\n      \\n      <h2>Applications</h2>\\n      <p>This technology could help athletes optimize training, assist patients with chronic conditions in monitoring their health, and provide early warning signs of dehydration or other health issues.</p>\\n      \\n      <h2>Current Status</h2>\\n      <p>Currently in prototype phase, testing accuracy against clinical-grade equipment and refining the sensor design for improved signal quality.</p>\\n    \",\n        image: \"/images/Impedix/FIG.1.png\",\n        images: [\n            \"/images/Impedix/FIG.1.png\",\n            \"/images/Impedix/FIG.2.png\",\n            \"/images/Impedix/FIG.3.png\",\n            \"/images/Impedix/FIG.4.png\"\n        ],\n        date: \"2024\",\n        links: {\n            patent: \"/Impedix\"\n        }\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2RhdGEvcHJvamVjdHMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQWdCTyxNQUFNQSxXQUFzQjtJQUNqQztRQUNFQyxNQUFNO1FBQ05DLE9BQU87UUFDUEMsYUFDRTtRQUNGQyxpQkFBa0I7UUF3QmxCQyxPQUFPO1FBQ1BDLFFBQVE7WUFDTjtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLE1BQU07UUFDTkMsT0FBTztZQUNMQyxPQUFPO1lBQ1BDLFFBQVE7UUFDVjtJQUNGO0lBQ0E7UUFDRVQsTUFBTTtRQUNOQyxPQUFPO1FBQ1BDLGFBQ0U7UUFDRkMsaUJBQWtCO1FBcUJsQkMsT0FBTztRQUNQQyxRQUFRO1lBQ047WUFDQTtZQUNBO1lBQ0E7U0FDRDtRQUNEQyxNQUFNO1FBQ05DLE9BQU87WUFDTEUsUUFBUTtRQUNWO0lBQ0Y7Q0FDRCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2RhdGEvcHJvamVjdHMudHM/ZDM5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFByb2plY3Qge1xuICBzbHVnOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGZ1bGxEZXNjcmlwdGlvbjogc3RyaW5nO1xuICBpbWFnZTogc3RyaW5nO1xuICBpbWFnZXM/OiBzdHJpbmdbXTsgLy8gT3B0aW9uYWwgYXJyYXkgZm9yIG11bHRpcGxlIGltYWdlc1xuICBkYXRlOiBzdHJpbmc7XG4gIGxpbmtzPzoge1xuICAgIGdpdGh1Yj86IHN0cmluZztcbiAgICBsaXZlPzogc3RyaW5nO1xuICAgIHBhcGVyPzogc3RyaW5nO1xuICAgIHBhdGVudD86IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IHByb2plY3RzOiBQcm9qZWN0W10gPSBbXG4gIHtcbiAgICBzbHVnOiBcImxhY3Rhc2Vuc2VcIixcbiAgICB0aXRsZTogXCJMYWN0YVNlbnNlXCIsXG4gICAgZGVzY3JpcHRpb246XG4gICAgICBcIkRFQ0EgSW50ZXJuYXRpb25hbCBGaW5hbGlzdCBwcm9qZWN0LiBEZXZlbG9wZWQgYSByYXBpZCBsYWN0aWMgYWNpZCBkZXRlY3Rpb24gc3lzdGVtIHVzaW5nIGJpb3NlbnNvciB0ZWNobm9sb2d5IHRvIG1vbml0b3IgbXVzY2xlIGZhdGlndWUuIENvbWJpbmluZyBlbnRyZXByZW5ldXJzaGlwIHdpdGggYmlvdGVjaCBpbm5vdmF0aW9uIHRvIG9wdGltaXplIGF0aGxldGljIHBlcmZvcm1hbmNlIGFuZCBwcmV2ZW50IGluanVyeS5cIixcbiAgICBmdWxsRGVzY3JpcHRpb246IGBcbiAgICAgIDxoMj5PdmVydmlldzwvaDI+XG4gICAgICA8cD5MYWN0YVNlbnNlIGlzIGEgcmFwaWQgbGFjdGljIGFjaWQgZGV0ZWN0aW9uIHN5c3RlbSB0aGF0IEkgZGV2ZWxvcGVkIGZvciBERUNBJ3MgaW50ZXJuYXRpb25hbCBjb21wZXRpdGlvbiwgd2hlcmUgaXQgYmVjYW1lIGFuIGludGVybmF0aW9uYWwgZmluYWxpc3QuIFRoZSBwcm9qZWN0IGNvbWJpbmVzIGJpb3NlbnNvciB0ZWNobm9sb2d5IHdpdGggcHJhY3RpY2FsIGFwcGxpY2F0aW9ucyBpbiBzcG9ydHMgcGVyZm9ybWFuY2UgYW5kIGluanVyeSBwcmV2ZW50aW9uLjwvcD5cbiAgICAgIFxuICAgICAgPGgyPlRoZSBQcm9ibGVtPC9oMj5cbiAgICAgIDxwPkF0aGxldGVzIG9mdGVuIHB1c2ggdGhyb3VnaCBtdXNjbGUgZmF0aWd1ZSB3aXRob3V0IHByZWNpc2UgZGF0YSwgaW5jcmVhc2luZyB0aGUgcmlzayBvZiBpbmp1cnkgYW5kIGxpbWl0aW5nIG9wdGltYWwgcGVyZm9ybWFuY2UuIEN1cnJlbnQgbW9uaXRvcmluZyBtZXRob2RzIGFyZSBlaXRoZXIgaW52YXNpdmUsIGRlbGF5ZWQsIG9yIGxhY2sgcmVhbC10aW1lIGluc2lnaHRzLjwvcD5cbiAgICAgIFxuICAgICAgPGgyPlRoZSBTb2x1dGlvbjwvaDI+XG4gICAgICA8cD5MYWN0YVNlbnNlIHVzZXMgZW56eW1hdGljIGJpb3NlbnNvcnMgdG8gbWVhc3VyZSBsYWN0aWMgYWNpZCBsZXZlbHMgaW4gcmVhbCB0aW1lLCBnaXZpbmcgYXRobGV0ZXMgYW5kIGNvYWNoZXMgYWN0aW9uYWJsZSBpbnNpZ2h0cyB0byBvcHRpbWl6ZSB0cmFpbmluZyBhbmQgcmVjb3ZlcnkuIFRoZSBzeXN0ZW0gYWxsb3dzIGZvciBzYWZlciwgZGF0YS1kcml2ZW4gcGVyZm9ybWFuY2UgbWFuYWdlbWVudC48L3A+XG4gICAgICBcbiAgICAgIDxoMj5CdXNpbmVzcyBNb2RlbDwvaDI+XG4gICAgICA8dWw+XG4gICAgICAgIDxsaT5EaXJlY3QtdG8tY29uc3VtZXIgd2VhcmFibGUgZGV2aWNlcyBmb3IgYXRobGV0ZXM8L2xpPlxuICAgICAgICA8bGk+UGFydG5lcnNoaXBzIHdpdGggc3BvcnRzIHRlYW1zIGFuZCB0cmFpbmVyczwvbGk+XG4gICAgICAgIDxsaT5TdWJzY3JpcHRpb24tYmFzZWQgcGVyZm9ybWFuY2UgdHJhY2tpbmcgYW5kIGFuYWx5dGljczwvbGk+XG4gICAgICAgIDxsaT5EYXRhLWRyaXZlbiBwZXJzb25hbGl6ZWQgdHJhaW5pbmcgcmVjb21tZW5kYXRpb25zPC9saT5cbiAgICAgIDwvdWw+XG4gICAgICBcbiAgICAgIDxoMj5ERUNBIENvbXBldGl0aW9uPC9oMj5cbiAgICAgIDxwPlByZXNlbnRlZCBMYWN0YVNlbnNlIGF0IERFQ0EncyBpbnRlcm5hdGlvbmFsIGNvbmZlcmVuY2UsIGNvbXBldGluZyBhZ2FpbnN0IGh1bmRyZWRzIG9mIGVudHJlcHJlbmV1cnNoaXAgcHJvamVjdHMuIEp1ZGdlcyBoaWdobGlnaHRlZCB0aGUgaW5ub3ZhdGl2ZSBjb21iaW5hdGlvbiBvZiBiaW90ZWNobm9sb2d5IGFuZCBwcmFjdGljYWwgYnVzaW5lc3MgYXBwbGljYXRpb24uPC9wPlxuICAgICAgXG4gICAgICA8aDI+V2hhdCBJIExlYXJuZWQ8L2gyPlxuICAgICAgPHA+VGhpcyBwcm9qZWN0IHRhdWdodCBtZSB0aGF0IGlubm92YXRpb24gaXNuJ3QganVzdCBhYm91dCB0aGUgdGVjaG5vbG9neeKAlGl0J3MgYWJvdXQgdW5kZXJzdGFuZGluZyB1c2VyIG5lZWRzLCBidWlsZGluZyBhIHZpYWJsZSBidXNpbmVzcyBtb2RlbCwgYW5kIGNsZWFybHkgY29tbXVuaWNhdGluZyBjb21wbGV4IGlkZWFzLiBJdCdzIHdoZXJlIG15IHBhc3Npb24gZm9yIGJpb3RlY2ggbWVldHMgcmVhbC13b3JsZCBlbnRyZXByZW5ldXJzaGlwLjwvcD5cbiAgICBgLFxuICAgIGltYWdlOiBcIi9pbWFnZXMvTGFjdGFTZW5zZS9MYWN0YXNlbnNlMS5wbmdcIixcbiAgICBpbWFnZXM6IFtcbiAgICAgIFwiL2ltYWdlcy9MYWN0YVNlbnNlL0xhY3Rhc2Vuc2UxLnBuZ1wiLFxuICAgICAgXCIvaW1hZ2VzL0xhY3RhU2Vuc2UvTGFjdGFTZW5zZTIucG5nXCIsXG4gICAgICBcIi9pbWFnZXMvTGFjdGFTZW5zZS9MYWN0YVNlbnNlMy5wbmdcIixcbiAgICAgIFwiL2ltYWdlcy9MYWN0YVNlbnNlL0xhY3Rhc2Vuc2U0LnBuZ1wiLFxuICAgIF0sXG4gICAgZGF0ZTogXCIyMDIzLTIwMjRcIixcbiAgICBsaW5rczoge1xuICAgICAgcGFwZXI6IFwiI1wiLFxuICAgICAgcGF0ZW50OiBcIi9MYWN0YVNlbnNlXCIsXG4gICAgfSxcbiAgfSxcbiAge1xuICAgIHNsdWc6IFwiYmlvaW1wZWRhbmNlLXNlbnNvclwiLFxuICAgIHRpdGxlOiBcIkltcGVkaXhcIixcbiAgICBkZXNjcmlwdGlvbjpcbiAgICAgIFwiRGVzaWduaW5nIGEgbm9uLWludmFzaXZlIGJpb2ltcGVkYW5jZSBzZW5zb3IgZm9yIHJlYWwtdGltZSBoZWFsdGggbW9uaXRvcmluZy4gVXNpbmcgZWxlY3RyaWNhbCBpbXBlZGFuY2UgdG8gbWVhc3VyZSBib2R5IGNvbXBvc2l0aW9uLCBoeWRyYXRpb24gbGV2ZWxzLCBhbmQgbWV0YWJvbGljIGNoYW5nZXMuXCIsXG4gICAgZnVsbERlc2NyaXB0aW9uOiBgXG4gICAgICA8aDI+T3ZlcnZpZXc8L2gyPlxuICAgICAgPHA+QmlvaW1wZWRhbmNlIHNlbnNpbmcgdXNlcyBzbWFsbCBlbGVjdHJpY2FsIGN1cnJlbnRzIHRvIG1lYXN1cmUgdGhlIGJvZHkncyBpbXBlZGFuY2UgKHJlc2lzdGFuY2UgYW5kIHJlYWN0YW5jZSkuIERpZmZlcmVudCB0aXNzdWVzIGhhdmUgZGlmZmVyZW50IGltcGVkYW5jZSB2YWx1ZXMsIGFsbG93aW5nIHVzIHRvIG5vbi1pbnZhc2l2ZWx5IG1vbml0b3IgaGVhbHRoIG1ldHJpY3MgaW4gcmVhbC10aW1lLjwvcD5cbiAgICAgIFxuICAgICAgPGgyPldoYXQgSXQgTWVhc3VyZXM8L2gyPlxuICAgICAgPHVsPlxuICAgICAgICA8bGk+Qm9keSBjb21wb3NpdGlvbiAoZmF0IHZzLiBtdXNjbGUgbWFzcyk8L2xpPlxuICAgICAgICA8bGk+SHlkcmF0aW9uIGxldmVscyBhbmQgZmx1aWQgZGlzdHJpYnV0aW9uPC9saT5cbiAgICAgICAgPGxpPk1ldGFib2xpYyByYXRlIGluZGljYXRvcnM8L2xpPlxuICAgICAgICA8bGk+Q2FyZGlvdmFzY3VsYXIgaGVhbHRoIG1hcmtlcnM8L2xpPlxuICAgICAgPC91bD5cbiAgICAgIFxuICAgICAgPGgyPlRlY2huaWNhbCBBcHByb2FjaDwvaDI+XG4gICAgICA8cD5UaGUgc2Vuc29yIHVzZXMgbXVsdGktZnJlcXVlbmN5IGJpb2ltcGVkYW5jZSBhbmFseXNpcyAoQklBKSB3aXRoIGN1c3RvbS1kZXNpZ25lZCBlbGVjdHJvZGVzLiBTaWduYWwgcHJvY2Vzc2luZyBhbGdvcml0aG1zIGZpbHRlciBub2lzZSBhbmQgZXh0cmFjdCBtZWFuaW5nZnVsIGhlYWx0aCBkYXRhIGZyb20gdGhlIGltcGVkYW5jZSBtZWFzdXJlbWVudHMuPC9wPlxuICAgICAgXG4gICAgICA8aDI+QXBwbGljYXRpb25zPC9oMj5cbiAgICAgIDxwPlRoaXMgdGVjaG5vbG9neSBjb3VsZCBoZWxwIGF0aGxldGVzIG9wdGltaXplIHRyYWluaW5nLCBhc3Npc3QgcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbmRpdGlvbnMgaW4gbW9uaXRvcmluZyB0aGVpciBoZWFsdGgsIGFuZCBwcm92aWRlIGVhcmx5IHdhcm5pbmcgc2lnbnMgb2YgZGVoeWRyYXRpb24gb3Igb3RoZXIgaGVhbHRoIGlzc3Vlcy48L3A+XG4gICAgICBcbiAgICAgIDxoMj5DdXJyZW50IFN0YXR1czwvaDI+XG4gICAgICA8cD5DdXJyZW50bHkgaW4gcHJvdG90eXBlIHBoYXNlLCB0ZXN0aW5nIGFjY3VyYWN5IGFnYWluc3QgY2xpbmljYWwtZ3JhZGUgZXF1aXBtZW50IGFuZCByZWZpbmluZyB0aGUgc2Vuc29yIGRlc2lnbiBmb3IgaW1wcm92ZWQgc2lnbmFsIHF1YWxpdHkuPC9wPlxuICAgIGAsXG4gICAgaW1hZ2U6IFwiL2ltYWdlcy9JbXBlZGl4L0ZJRy4xLnBuZ1wiLFxuICAgIGltYWdlczogW1xuICAgICAgXCIvaW1hZ2VzL0ltcGVkaXgvRklHLjEucG5nXCIsXG4gICAgICBcIi9pbWFnZXMvSW1wZWRpeC9GSUcuMi5wbmdcIixcbiAgICAgIFwiL2ltYWdlcy9JbXBlZGl4L0ZJRy4zLnBuZ1wiLFxuICAgICAgXCIvaW1hZ2VzL0ltcGVkaXgvRklHLjQucG5nXCIsXG4gICAgXSxcbiAgICBkYXRlOiBcIjIwMjRcIixcbiAgICBsaW5rczoge1xuICAgICAgcGF0ZW50OiBcIi9JbXBlZGl4XCIsXG4gICAgfSxcbiAgfSxcbl07XG5cbiJdLCJuYW1lcyI6WyJwcm9qZWN0cyIsInNsdWciLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZnVsbERlc2NyaXB0aW9uIiwiaW1hZ2UiLCJpbWFnZXMiLCJkYXRlIiwibGlua3MiLCJwYXBlciIsInBhdGVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./data/projects.ts\n"));

/***/ })

});